swagger: '2.0'
info:
  title: Startup Ecosystem Mapping Platform API
  description: API for managing and retrieving data related to startups, investors, events, and news in NYC.
  version: '1.0.0'
  
host: 'api.startupecosystem.com'
schemes:
  - https

paths:
  /startups:
    get:
      summary: Retrieve a list of startups
      description: Returns a list of startups available in the database with filtering and pagination capabilities.
      parameters:
        - in: query
          name: industry
          type: string
          description: Filter startups by industry.
        - in: query
          name: funding
          type: integer
          format: int32
          description: Filter startups by the amount of funding received.
      responses:
        '200':
          description: A list of startups.
          schema:
            type: array
            items:
              $ref: '#/definitions/Startup'
  
  /investors:
    get:
      summary: Retrieve a list of investors
      description: Returns a list of investors who are part of the startup ecosystem.
      responses:
        '200':
          description: A list of investors.
          schema:
            type: array
            items:
              $ref: '#/definitions/Investor'
  
  /events:
    get:
      summary: Retrieve a list of events
      description: Returns a list of upcoming events related to the startup ecosystem.
      responses:
        '200':
          description: A list of events.
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'

  /users:
    post:
      summary: Create a new user
      description: Registers a new user and returns the user profile information.
      parameters:
        - in: body
          name: user
          description: The user's information to create a new account.
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: The user was created successfully.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad request - the request could not be understood or was missing required parameters.
        '409':
          description: Conflict - a user with that email address already exists.

  /users/{userId}/savedPosts:
    post:
      summary: Save a post to the user's saved posts list
      description: Add a specific post to the saved posts list of the user identified by userId.
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: The user's unique identifier.
        - in: body
          name: post
          required: true
          description: The post to be saved.
          schema:
            type: object
            properties:
              postId:
                type: string
                description: The ID of the post to be saved.
      responses:
        '200':
          description: The post was saved successfully.
        '400':
          description: Bad request - the request could not be understood or was missing required parameters.
        '404':
          description: Not found - the user or post does not exist.


  /users/{userId}/profile:
    get:
      summary: Retrieve a user's profile
      description: Returns the profile information of a specific user.
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: The user's unique identifier.
      responses:
        '200':
          description: User profile information.
          schema:
            $ref: '#/definitions/User'

  /news:
    get:
      summary: Retrieve a list of news articles
      description: Returns a list of news articles related to the startup ecosystem with filtering and pagination capabilities.
      parameters:
        - in: query
          name: category
          type: string
          description: Filter news by category, e.g., funding, launches, technology.
        - in: query
          name: date
          type: string
          format: date
          description: Retrieve news from a specific date.
      responses:
        '200':
          description: A list of news articles.
          schema:
            type: array
            items:
              $ref: '#/definitions/News'
  
definitions:
  Startup:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for the startup.
      name:
        type: string
        description: The name of the startup.
      industry:
        type: string
        description: The industry the startup belongs to.
      funding:
        type: integer
        format: int32
        description: The amount of funding the startup has received.
  
  Investor:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for the investor.
      name:
        type: string
        description: The name of the investor.
      investments:
        type: array
        items:
          $ref: '#/definitions/Startup'
        description: The startups the investor has invested in.

  Event:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for the event.
      name:
        type: string
        description: The name of the event.
      date:
        type: string
        format: date-time
        description: The date and time of the event.

  User:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for the user.
      name:
        type: string
        description: The name of the user.
      profile:
        type: object
        description: Additional profile information.
      saved_startups:
        type: list
        description: list of saved startups
      saved_investors:
        type: list
        description: list of saved investors


  News:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for the news article.
      title:
        type: string
        description: The title of the news article.
      content:
        type: string
        description: The content of the news article.
      datePublished:
        type: string
        format: date-time
        description: The date and time when the news article was published.
      author:
        type: string
        description: The author of the news article.
      category:
        type: string
        description: The category of the news article.
